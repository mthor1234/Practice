package binarytree;

public class BinaryTree {
	
	Node root;
	
	
	public void insertNode(Node node, int value){
		// If the value is less than the nodes value
		if(value <= node.getValue()){
			if(node.leftChild != null){
				insertNode(node.leftChild, value);
			}
			else{
				node.leftChild = new Node(value);
				System.out.println("Setting " + value + "as the left child of " + node.getValue());
			}
			
		}
		else if(value > node.getValue()){
			if(node.rightChild != null){
				insertNode(node.rightChild, value);
			}
			else{
				node.rightChild = new Node(value);
				System.out.println("Setting " + value + "as the right child of " + node.getValue());
			}
		}	
	}
	
	public void preOrderTraversal(Node node){
		if (node != null) {
			  preOrderTraversal(node.leftChild);
		      System.out.println("  Traversed " + node.getValue());
		      preOrderTraversal(node.rightChild);
		    }
	}

}
